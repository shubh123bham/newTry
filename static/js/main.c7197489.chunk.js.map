{"version":3,"sources":["Components/Card/card.jsx","Components/card-list/card-list.jsx","Components/SearchBar/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","e","setState","enterName","target","value","state","fetch","then","Response","json","user","this","filterSearch","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAEaA,EAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAM,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACzB,6BAAKL,EAAMI,QAAQE,WCJlBC,G,MAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEOD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAAG,cAAC,EAAD,CAA0BA,QAASA,GAAtBA,EAAQC,WCLpDK,EAAS,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aAEhC,OACI,8BACI,uBACAC,KAAK,SACLF,YAAeA,EACfG,SAAYF,OCqCTG,E,kDAtCb,aACC,IAAD,8BACE,gBAaFH,aAAe,SAACI,GAEd,EAAKC,SAAS,CAACC,UAAUF,EAAEG,OAAOC,SAblC,EAAKC,MAAQ,CACXb,SAAS,GACTU,UAAU,IALd,E,qDAQA,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAQtC,WACC,IAAD,EAC+BC,KAAKN,MAA3Bb,EADT,EACSA,SAASU,EADlB,EACkBA,UACVU,EAAepB,EAASqB,QAAO,SAAAzB,GAAO,OAAIA,EAAQE,KAAKwB,cAAcC,SAASb,EAAUY,kBAC9F,OACA,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CACAU,YAAc,aACdC,aAAgBe,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAYoB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7197489.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\nexport const Card = (props) =>{\r\n\r\n    return(\r\n        <div className=\"card-container\">\r\n            <img alt = \"monsters\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h1>{props.monster.name}</h1>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react'\r\nimport { Card } from '../Card/card'\r\nimport './card.list.css'\r\nexport const CardList = (props)=>{\r\n    return(\r\n        <div className=\"card-list\">\r\n            {\r\n               props.monsters.map(monster =><Card key = {monster.id}  monster={monster} />)\r\n            }\r\n        </div>\r\n    )\r\n} ","import React from 'react'\r\n\r\nexport const Search = ({placeholder,handleChange})=>{\r\n\r\n    return(\r\n        <div>\r\n            <input \r\n            type=\"search\" \r\n            placeholder = {placeholder}\r\n            onChange = {handleChange}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}","import React, { Component } from 'react'\nimport './App.css';\nimport {CardList} from './Components/card-list/card-list'\nimport { Search } from './Components/SearchBar/search';\n\nclass App extends Component \n{\n\n  constructor()\n  {\n    super();\n\n    this.state = {\n      monsters:[],\n      enterName:\"\"  \n    }\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(Response=>Response.json())\n    .then(user=>this.setState({monsters:user}))\n  }\n  \n  handleChange = (e) =>\n  {\n    this.setState({enterName:e.target.value})\n  }\n\n  render ()\n  {\n    const {monsters,enterName} = this.state;\n    const filterSearch = monsters.filter(monster => monster.name.toLowerCase().includes(enterName.toLowerCase()))\n    return(\n    <div className=\"App\">\n      <Search\n      placeholder = \"enter name\"\n      handleChange = {this.handleChange}\n      />\n      <CardList monsters = {filterSearch}/>\n    </div>\n    )\n  \n  }\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}